name: "Checkout Extended"
description: ""
inputs:
  path:
    description: "Path"
    required: true
  use:
    description: "Commit to build"
    required: false
    default: "current"
  token:
    description: "GH Token to use for checkouts"
    required: false
    default: "${{ github.token }}"
  repo:
    description: "Repository to checkout"
    required: false
    default: "${{ github.repository }}"
  use-cn:
    description: "Commiter Name"
    required: false
    default: "github-actions[bot]"
  use-ce:
    description: "Commiter Email"
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"
  use-an:
    description: "Author Name"
    required: false
    default: ""
  use-ae:
    description: "Author Email"
    required: false
    default: ""
  continue-on-error:
    description: "Continue On Error"
    required: false
    default: "false"
outputs:
  sha:
    description: "SHA of checked out commit"
    value: ${{ steps.current-sha.outputs.sha }}
  an:
    description: "Author name of checked out commit"
    value: ${{ steps.current-sha.outputs.an }}
  ae:
    description: "Author email of checked out commit"
    value: ${{ steps.current-sha.outputs.ae }}
  cn:
    description: "Commiter name of checked out commit"
    value: ${{ steps.current-sha.outputs.cn }}
  ce:
    description: "Commiter email of checked out commit"
    value: ${{ steps.current-sha.outputs.ce }}
  message:
    description: "Commit message"
    value: ${{ steps.current-sha.outputs.message }}
runs:
  using: "composite"
  steps:
    - name: Checkout Specific Commit
      id: checkout-specific
      if: ${{ inputs.use != 'current' && inputs.use != '' && inputs.use != 'false' }}
      uses: actions/checkout@v3
      continue-on-error: ${{ inputs.continue-on-error == 'true' }}
      with:
        repository: ${{ inputs.repo }}
        submodules: "recursive"
        ref: ${{ inputs.use }}
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}

    - name: Checkout Current Commit
      id: checkout-current
      if: ${{ inputs.use == 'current' }}
      uses: actions/checkout@v3
      continue-on-error: ${{ inputs.continue-on-error == 'true' }}
      with:
        repository: ${{ inputs.repo }}
        submodules: "recursive"
        token: ${{ inputs.token }}
        path: ${{ inputs.path }}

    - name: Maybe setup Commiter Name
      if: ${{ inputs.use-cn != '' }}
      shell: bash
      run: |
        cd "${{ inputs.path }}"
        git config user.name "${{ inputs.use-cn }}"
        git config --global user.name "${{ inputs.use-cn }}"

    - name: Maybe setup Commiter Email
      if: ${{ inputs.use-ce != '' }}
      shell: bash
      run: |
        cd "${{ inputs.path }}"
        git config user.email "${{ inputs.use-ce }}"
        git config --global user.email "${{ inputs.use-ce }}"

    - name: Maybe setup Author Name
      if: ${{ inputs.use-an != '' }}
      shell: bash
      run: |
        cd "${{ inputs.path }}" && git config author.name "${{ inputs.use-an }}"

    - name: Maybe setup Author Email
      if: ${{ inputs.use-ae != '' }}
      shell: bash
      run: |
        cd "${{ inputs.path }}" && git config author.email "${{ inputs.use-ae }}"

    - name: Maybe create branch
      if: ${{ steps.checkout-specific.outcome == 'failure' }}
      shell: bash
      run: |
        cd "${{ inputs.path }}"
        if [[ 0 = $(git ls-remote --heads origin "${{ inputs.use }}" | wc -l) ]]; then
          echo "Creating a ${{ inputs.use }} branch..."
          git checkout --quiet --orphan "${{ inputs.use }}"
          git commit --allow-empty -m "Initial empty commit"
          git config --global push.autoSetupRemote true
        fi

    - name: Set SHA Output
      env: 
        IS_SPECIFIC: ${{ steps.checkout-specific.outcome != 'skipped' }}
        IS_CURRENT: ${{ steps.checkout-current.outcome != 'skipped' }}
      id: current-sha
      shell: bash
      run: |
        if [ "${IS_SPECIFIC}" == "true" ] || [ "${IS_CURRENT}" == "true" ]; then
          cd "${{ inputs.path }}"
          SHA=$(git log -n 1 --format=%H);
          COMMIT_AUTHOR_NAME="$( git log --format=%an -n 1 ${SHA} )"
          COMMIT_AUTHOR_EMAIL="$( git log --format=%ae -n 1 ${SHA} )"
          COMMIT_COMMITTER_NAME="$( git log --format=%cn -n 1 ${SHA} )"
          COMMIT_COMMITTER_EMAIL="$( git log --format=%ce -n 1 ${SHA} )"
          COMMIT_MESSAGE="$( git log --format=%B -n 1 ${SHA} )"
          echo "sha=${SHA}" >> $GITHUB_OUTPUT
          echo "an=${COMMIT_AUTHOR_NAME}" >> $GITHUB_OUTPUT
          echo "ae=${COMMIT_AUTHOR_EMAIL}" >> $GITHUB_OUTPUT
          echo "cn=${COMMIT_COMMITTER_NAME}" >> $GITHUB_OUTPUT
          echo "ce=${COMMIT_COMMITTER_EMAIL}" >> $GITHUB_OUTPUT
          {
            echo 'message<<EOF_MANIFEST'
            echo "${COMMIT_MESSAGE}"
            echo 'EOF_MANIFEST'
          } >> $GITHUB_OUTPUT
        else
          echo "sha=false" >> $GITHUB_OUTPUT
          echo "an=false" >> $GITHUB_OUTPUT
          echo "ae=false" >> $GITHUB_OUTPUT
          echo "cn=false" >> $GITHUB_OUTPUT
          echo "ce=false" >> $GITHUB_OUTPUT
          echo "message=false" >> $GITHUB_OUTPUT
        fi
